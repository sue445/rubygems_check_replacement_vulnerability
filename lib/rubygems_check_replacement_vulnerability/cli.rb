require "rubygems_check_replacement_vulnerability"
require "thor"

module RubygemsCheckReplacementVulnerability
  require "yaml"
  require "json"

  class CLI < Thor
    desc "version", "Show version"
    def version
      puts RubygemsCheckReplacementVulnerability::VERSION
    end

    desc "vulnerable_gems", "Show vulnerable gems"
    option :username, aliases: "u", desc: "Username of rubygems.org", required: true
    option :format, aliases: "f", desc: "print format (plain, yaml, json)", default: "plain"
    def vulnerable_gems
      gems = Rubygems.owner_gems(options[:username]).select { |gem| gem.include?("-") }.sort

      vulnerable_gems =
        gems.each_with_object({}) do |gem, result|
          rubygems = Rubygems.new(gem)
          versions = rubygems.vulnerable_versions.sort_by { |version| Gem::Version.new(version) }
          result[gem] = versions unless versions.empty?
        end

      case options[:format]
      when "plain"
        puts "#{options[:username]}'s vulnerable gems"

        if vulnerable_gems.empty?
          puts "Nothing!"
        else
          vulnerable_gems.each do |gem, versions|
            puts "- #{gem} : #{versions.join(", ")}"
          end
        end

      when "yaml"
        puts YAML.dump(vulnerable_gems)

      when "json"
        puts JSON.dump(vulnerable_gems)

      else
        raise "Unknown format: #{options[:format]}"
      end
    end
  end
end
